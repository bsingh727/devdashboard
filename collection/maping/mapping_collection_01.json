{
	"id": "a204addd-bb7e-714a-bf4c-283fd2fe1d6e",
	"name": "usercollection",
	"allTests": [],
	"timestamp": 1481618470209,
	"collection_id": "19aed429-8595-fd13-a0bc-7e4adfc24402",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": null,
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "19aed429-8595-fd13-a0bc-7e4adfc24402",
		"name": "usercollection",
		"description": "",
		"order": [
			"d8e9c808-0c1d-f989-1ca1-142bc26d5d26"
		],
		"folders": [],
		"requests": [
			{
				"id": "d8e9c808-0c1d-f989-1ca1-142bc26d5d26",
				"headers": "//Content-Type: application/x-www-form-urlencoded\n",
				"url": "http://localhost:4000/getuserdetails",
				"preRequestScript": null,
				"pathVariables": {},
				"method": "POST",
				"data": "",
				"dataMode": "raw",
				"version": 2,
				"tests": "tests[\"Body matches string\"] = responseBody.has(\"bishal singh\");\r\ntests[\"Body matches string fail\"] = responseBody.has(\"Juunk to fail\"); ",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1481618993026,
				"name": "http://localhost:4000/",
				"description": "",
				"collectionId": "19aed429-8595-fd13-a0bc-7e4adfc24402",
				"responses": []
			}
		],
		"timestamp": 1481543556621,
		"synced": false,
		"syncedFilename": "",
		"remote_id": 0,
		"remoteLink": "",
		"remoteLinkUpdatedAt": null,
		"public": false,
		"owner": "1348297",
		"subscribed": false,
		"createdAt": 1481543556646,
		"updatedAt": 1481543556693,
		"write": true,
		"isDeleted": false,
		"published": false,
		"favorite": false,
		"permissions": {},
		"syncedPermissions": {}
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"id": "d8e9c808-0c1d-f989-1ca1-142bc26d5d26",
			"name": "http://localhost:4000/",
			"url": "http://localhost:4000/getuserdetails",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Body matches string": true,
				"Body matches string fail": false
			},
			"testPassFailCounts": {
				"Body matches string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string fail": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Body matches string": true,
					"Body matches string fail": false
				}
			],
			"time": 12,
			"totalRequestTime": 12,
			"iterationResults": {}
		}
	],
	"totalPass": 1,
	"totalFail": 1,
	"totalTime": 12,
	"lifecycle": "idle",
	"willStop": false,
	"requests": [
		{
			"name": "http://localhost:4000/",
			"id": "d8e9c808-0c1d-f989-1ca1-142bc26d5d26",
			"url": "http://localhost:4000/getuserdetails",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Body matches string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string fail": {
					"pass": 0,
					"fail": 1
				}
			},
			"gridTitles": [
				"Body matches string",
				"Body matches string fail"
			],
			"gridData": [
				[
					true,
					false
				]
			],
			"tests": {
				"Body matches string": true,
				"Body matches string fail": false
			}
		}
	],
	"synced": false
}